dist: xenial
language: bash
services: docker

env:
  global:
    - IMAGE=drpsychick/docker-telegraf
  matrix:
    - ALPINE_VERSION=alpine
    - ALPINE_VERSION=1.9.2-alpine
    - ALPINE_VERSION=1.8.3-alpine

before_script:
  - docker build -t test --build-arg ALPINE_VERSION=$ALPINE_VERSION .
  - export VERSION=$(docker run --rm test telegraf version |awk '$1 == "Telegraf" { print $2; exit }' |tr -d 'v')
  - >
    eval $(ssh-agent -s) &&
    echo "$DEPLOY_PRIVATE_KEY" | ssh-add - && ssh-add -l
  - >
    git config --global user.email "github@drsick.net";
    git config --global user.name "TAG bot";
    git remote set-url origin "git@github.com:DrPsychick/docker-telegraf.git"
  - >
    echo "image $IMAGE, git branch $TRAVIS_BRANCH based on telegraf:$ALPINE_VERSION";


script:
  # test always passes
  - echo "Alpine $ALPINE_VERSION telegraf $VERSION"
  - >
    echo "Running tests...";
    docker run test telegraf version

after_success:
  # trigger docker hub 'dev' build
  - >
    if [ "$TRAVIS_BRANCH" = "develop" -a "$ALPINE_VERSION" = "alpine" ]; then
    curl -H "Content-Type: application/json" --data '{"source_type": "Branch", "source_name": "develop"}'
    -X POST "$DOCKERHUB_TRIGGER";
    fi
  # trigger docker hub 'latest' build
  # create or update new branch from master for each version, push will trigger docker hub build
  - >
    if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false" ]; then
    if [ "$ALPINE_VERSION" = "alpine" ]; then
    curl -H "Content-Type: application/json" --data '{"source_type": "Branch", "source_name": "master"}'
    -X POST "$DOCKERHUB_TRIGGER";
    else
    branch="$ALPINE_VERSION";
    create="$([ -z "$(git branch -r |grep "$branch")" ] && echo "-b " || echo "--track origin/")";
    echo "Branch: $create$branch";
    git checkout $create$branch;
    git merge -X theirs --no-edit --commit master;
    sed -i -e "s/ALPINE_VERSION=.*/ALPINE_VERSION=$ALPINE_VERSION/" Dockerfile;
    git diff Dockerfile;
    docker build -t $IMAGE:$branch --build-arg ALPINE_VERSION=$ALPINE_VERSION . || exit 1;
    git add Dockerfile && git commit -m "automated build on $branch";
    git push -u origin $branch;
    fi;
    fi
